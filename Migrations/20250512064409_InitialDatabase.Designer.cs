// <auto-generated />
using System;
using College2Career.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace College2Career.Migrations
{
    [DbContext(typeof(C2CDBContext))]
    [Migration("20250512064409_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("College2Career.Models.Applications", b =>
                {
                    b.Property<int>("applicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("applicationId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("reason")
                        .HasColumnType("varchar(300)")
                        .HasColumnName("reason");

                    b.Property<string>("status")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.Property<int?>("studentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.Property<int?>("vacancyId")
                        .HasColumnType("int")
                        .HasColumnName("vacancyId");

                    b.HasKey("applicationId");

                    b.HasIndex("studentId");

                    b.HasIndex("vacancyId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("College2Career.Models.Colleges", b =>
                {
                    b.Property<int>("collegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("collegeId"));

                    b.Property<string>("area")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<string>("city")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("collegeName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("collegeName");

                    b.Property<string>("contactNumber")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactNumber");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("establishedDate")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("establishedDate");

                    b.Property<string>("profilePicture")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("profilePicture");

                    b.Property<string>("state")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("state");

                    b.HasKey("collegeId");

                    b.ToTable("Colleges");
                });

            modelBuilder.Entity("College2Career.Models.Companies", b =>
                {
                    b.Property<int>("companyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("companyId"));

                    b.Property<string>("area")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<string>("city")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("companyName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("companyName");

                    b.Property<string>("contactNumber")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactNumber");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("employeeSize")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("employeeSize");

                    b.Property<string>("establishedDate")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("establishedDate");

                    b.Property<string>("industry")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("industry");

                    b.Property<string>("profilePicture")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("profilePicture");

                    b.Property<string>("reasonOfStatus")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("reasonOfStatus");

                    b.Property<string>("state")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("state");

                    b.Property<string>("status")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<int?>("usersId")
                        .HasColumnType("int");

                    b.HasKey("companyId");

                    b.HasIndex("usersId")
                        .IsUnique()
                        .HasFilter("[usersId] IS NOT NULL");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("College2Career.Models.Feedbacks", b =>
                {
                    b.Property<int>("feedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedbackId"));

                    b.Property<int?>("collegeId")
                        .HasColumnType("int");

                    b.Property<string>("comments")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comments");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("rating")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("rating");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.HasKey("feedbackId");

                    b.HasIndex("collegeId");

                    b.HasIndex("companyId");

                    b.HasIndex("studentId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("College2Career.Models.Interviews", b =>
                {
                    b.Property<int>("interviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("interviewId"));

                    b.Property<int?>("applicationId")
                        .HasColumnType("int");

                    b.Property<int?>("collegeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("interviewDate")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("interviewDate");

                    b.Property<string>("interviewStatus")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.Property<string>("interviewTime")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("interviewTime");

                    b.HasKey("interviewId");

                    b.HasIndex("applicationId")
                        .IsUnique()
                        .HasFilter("[applicationId] IS NOT NULL");

                    b.HasIndex("collegeId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("College2Career.Models.Offers", b =>
                {
                    b.Property<int>("offerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("offerId"));

                    b.Property<int?>("applicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("offerLater")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("offerLater");

                    b.Property<string>("reason")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reason");

                    b.Property<string>("status")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.HasKey("offerId");

                    b.HasIndex("applicationId")
                        .IsUnique()
                        .HasFilter("[applicationId] IS NOT NULL");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("College2Career.Models.Placements", b =>
                {
                    b.Property<int>("placementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("placementId"));

                    b.Property<int?>("collegeId")
                        .HasColumnType("int");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("placementDate")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("placementDate");

                    b.Property<string>("salaryPackage")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("salaryPackage");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.Property<int?>("vacancyId")
                        .HasColumnType("int");

                    b.HasKey("placementId");

                    b.HasIndex("collegeId");

                    b.HasIndex("companyId");

                    b.HasIndex("studentId");

                    b.HasIndex("vacancyId");

                    b.ToTable("Placements");
                });

            modelBuilder.Entity("College2Career.Models.Roles", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("role")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.HasKey("roleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("College2Career.Models.Students", b =>
                {
                    b.Property<int>("studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentId"));

                    b.Property<string>("course")
                        .HasColumnType("varchar(25)")
                        .HasColumnName("course");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("graduationYear")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("graduationYear");

                    b.Property<string>("resume")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("resume");

                    b.Property<string>("rollNumber")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("rollNumber");

                    b.Property<string>("status")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.Property<string>("statusReason")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("statusReason");

                    b.Property<string>("studentName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("studentName");

                    b.Property<int?>("usersId")
                        .HasColumnType("int");

                    b.HasKey("studentId");

                    b.HasIndex("usersId")
                        .IsUnique()
                        .HasFilter("[usersId] IS NOT NULL");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("College2Career.Models.Users", b =>
                {
                    b.Property<int>("usersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usersId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("email")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("forgotPasswordToken")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("forgotPasswordToken");

                    b.Property<string>("password")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int?>("roleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("tokenExpirationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("tokenExpirationTime");

                    b.HasKey("usersId");

                    b.HasIndex("roleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("College2Career.Models.Vacancies", b =>
                {
                    b.Property<int>("vacancyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vacancyId"));

                    b.Property<int?>("companyId")
                        .HasColumnType("int")
                        .HasColumnName("companyId");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("eligibility_criteria")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("eligibility_criteria");

                    b.Property<string>("locationType")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("locationType");

                    b.Property<string>("package")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("package");

                    b.Property<string>("status")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.Property<string>("timing")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timing");

                    b.Property<string>("title")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("totalVacancy")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("totalVacancy");

                    b.Property<string>("type")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("type");

                    b.HasKey("vacancyId");

                    b.HasIndex("companyId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("College2Career.Models.Applications", b =>
                {
                    b.HasOne("College2Career.Models.Students", "Students")
                        .WithMany("Applications")
                        .HasForeignKey("studentId");

                    b.HasOne("College2Career.Models.Vacancies", "Vacancies")
                        .WithMany("Applications")
                        .HasForeignKey("vacancyId");

                    b.Navigation("Students");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("College2Career.Models.Companies", b =>
                {
                    b.HasOne("College2Career.Models.Users", "Users")
                        .WithOne("Companies")
                        .HasForeignKey("College2Career.Models.Companies", "usersId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("College2Career.Models.Feedbacks", b =>
                {
                    b.HasOne("College2Career.Models.Colleges", "Colleges")
                        .WithMany("Feedbacks")
                        .HasForeignKey("collegeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("College2Career.Models.Companies", "Companies")
                        .WithMany("Feedbacks")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("College2Career.Models.Students", "Students")
                        .WithMany("Feedbacks")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Colleges");

                    b.Navigation("Companies");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("College2Career.Models.Interviews", b =>
                {
                    b.HasOne("College2Career.Models.Applications", "Applications")
                        .WithOne("Interviews")
                        .HasForeignKey("College2Career.Models.Interviews", "applicationId");

                    b.HasOne("College2Career.Models.Colleges", "Colleges")
                        .WithMany("Interviews")
                        .HasForeignKey("collegeId");

                    b.Navigation("Applications");

                    b.Navigation("Colleges");
                });

            modelBuilder.Entity("College2Career.Models.Offers", b =>
                {
                    b.HasOne("College2Career.Models.Applications", "Applications")
                        .WithOne("Offers")
                        .HasForeignKey("College2Career.Models.Offers", "applicationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Applications");
                });

            modelBuilder.Entity("College2Career.Models.Placements", b =>
                {
                    b.HasOne("College2Career.Models.Colleges", "Colleges")
                        .WithMany("Placements")
                        .HasForeignKey("collegeId");

                    b.HasOne("College2Career.Models.Companies", "Companies")
                        .WithMany("Placements")
                        .HasForeignKey("companyId");

                    b.HasOne("College2Career.Models.Students", "Students")
                        .WithMany("Placements")
                        .HasForeignKey("studentId");

                    b.HasOne("College2Career.Models.Vacancies", "Vacancies")
                        .WithMany("Placements")
                        .HasForeignKey("vacancyId");

                    b.Navigation("Colleges");

                    b.Navigation("Companies");

                    b.Navigation("Students");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("College2Career.Models.Students", b =>
                {
                    b.HasOne("College2Career.Models.Users", "Users")
                        .WithOne("Students")
                        .HasForeignKey("College2Career.Models.Students", "usersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("College2Career.Models.Users", b =>
                {
                    b.HasOne("College2Career.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("roleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("College2Career.Models.Vacancies", b =>
                {
                    b.HasOne("College2Career.Models.Companies", "Companies")
                        .WithMany("Vacancies")
                        .HasForeignKey("companyId");

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("College2Career.Models.Applications", b =>
                {
                    b.Navigation("Interviews");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("College2Career.Models.Colleges", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Interviews");

                    b.Navigation("Placements");
                });

            modelBuilder.Entity("College2Career.Models.Companies", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Placements");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("College2Career.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("College2Career.Models.Students", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Feedbacks");

                    b.Navigation("Placements");
                });

            modelBuilder.Entity("College2Career.Models.Users", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("College2Career.Models.Vacancies", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Placements");
                });
#pragma warning restore 612, 618
        }
    }
}
